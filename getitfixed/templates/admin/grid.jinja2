{% extends 'c2cgeoform:/templates/grid.jinja2' %}
{% block calculateTableHeightJS %}
return $(window).height() - $('footer').height() - $('header').height() - 30
{% endblock %}
{% block grid %}
    {{ super() }}
<script>
  $(function() {
     const bsTable = $('#grid')
     let dataUrl = bsTable.data()['bootstrap.table'].options.url
     let openIssues = '{{request.localizer.translate("Get open")}}'
     let allIssues = '{{request.localizer.translate("Get all")}}'
     const url  = new URL(dataUrl)

     let buttonElement = $('<button/>', {class: 'btn btn-default'})
          .append($(`<span class="hidden">${openIssues}</span>`).data('issues', 'open'))
          .append($(`<span>${allIssues}</span>`).data('issues', 'all'))

     let fetchIssues = function() {
          bsTable.data()['bootstrap.table'].options.url = url.toString()
          bsTable.bootstrapTable('refresh')
     }

     let toggleOpenFilter = function () {
         let spans = buttonElement.find('span')
         spans.toggleClass("hidden")
         let status = spans.not('.hidden').data().issues
         url.searchParams.set('all', status === 'all' ? 'false' : 'true')
         fetchIssues()
     }

     let onCategoryClick = function (e) {
         $(dropDownElement.find('.category-label')).text(e.currentTarget.textContent)
         url.searchParams.set('category', $(e.currentTarget).data().categoryId)
         fetchIssues()
     }

    const buttonGroup = $('.list-grid .btn-group.pull-right')
    buttonElement.click(toggleOpenFilter)
    buttonGroup.append(buttonElement)

    // category filter
    const categories = {{ categories|tojson|safe }}
    let dropDownElement = $('<button/>', {class: 'btn btn-default dropdown-toggle',
          'data-toggle': 'dropdown'})
          .append($('<span/>', {class: 'category-label'}).text('{{ _('All Categories') }}'))
          .append($('<span/>', {class: 'caret'}))
    // add dropDown to button group
    buttonGroup.append(dropDownElement)
    // dropDown content
    let dropDownMenu = $('<ul/>', {class: 'dropdown-menu'})

    buttonGroup.append(dropDownMenu)
    // add extra li for all categories
    categories.splice(0,0, {id: '0', value: '{{ _('All Categories') }}'})
    for (let cat of categories) {
        dropDownMenu.append($('<li/>')
            .append($('<a/>', {href: '#'}).text(cat.value).data('categoryId', cat.id)
                .click(onCategoryClick)
            )
        )
    }
  })
</script>
{% endblock %}