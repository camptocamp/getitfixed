"""First revision

Revision ID: b55da8261fc3
Revises: 
Create Date: 2019-08-01 15:18:00.195918

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = 'b55da8261fc3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_address')),
    schema='getitfixed'
    )
    op.create_table('bus_stops',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, management=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bus_stops')),
    schema='getitfixed'
    )
    op.create_table('district',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_district')),
    schema='getitfixed'
    )
    op.create_table('situation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('name_fr', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_situation')),
    schema='getitfixed'
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('bus_stop_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['bus_stop_id'], ['getitfixed.bus_stops.id'], name=op.f('fk_comments_bus_stop_id_bus_stops')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments')),
    sa.UniqueConstraint('hash', name=op.f('uq_comments_hash')),
    schema='getitfixed'
    )
    op.create_table('excavation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hash', sa.Text(), nullable=True),
    sa.Column('reference_number', sa.Text(), nullable=True),
    sa.Column('request_date', sa.Date(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('motif', sa.Text(), nullable=True),
    sa.Column('location_district_id', sa.Integer(), nullable=True),
    sa.Column('location_street', sa.Text(), nullable=False),
    sa.Column('location_postal_code', sa.Text(), nullable=False),
    sa.Column('location_town', sa.Text(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('location_position', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, management=True), nullable=True),
    sa.Column('responsible_title', sa.Text(), nullable=True),
    sa.Column('responsible_name', sa.Text(), nullable=True),
    sa.Column('responsible_first_name', sa.Text(), nullable=True),
    sa.Column('responsible_mobile', sa.Text(), nullable=True),
    sa.Column('responsible_mail', sa.Text(), nullable=True),
    sa.Column('responsible_company', sa.Text(), nullable=True),
    sa.Column('validated', sa.Boolean(), nullable=True),
    sa.Column('work_footprint', geoalchemy2.types.Geometry(geometry_type='MULTIPOLYGON', srid=4326, management=True), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['getitfixed.address.id'], name=op.f('fk_excavation_address_id_address')),
    sa.ForeignKeyConstraint(['location_district_id'], ['getitfixed.district.id'], name=op.f('fk_excavation_location_district_id_district')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_excavation')),
    sa.UniqueConstraint('hash', name=op.f('uq_excavation_hash')),
    schema='getitfixed'
    )
    op.create_table('contact_person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('last_name', sa.Text(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['getitfixed.excavation.id'], name=op.f('fk_contact_person_permission_id_excavation')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contact_person')),
    schema='getitfixed'
    )
    op.create_table('photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.Text(), nullable=True),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['getitfixed.excavation.id'], name=op.f('fk_photo_permission_id_excavation')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_photo')),
    schema='getitfixed'
    )
    op.create_table('situation_for_permission',
    sa.Column('situation_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['getitfixed.excavation.id'], name=op.f('fk_situation_for_permission_permission_id_excavation')),
    sa.ForeignKeyConstraint(['situation_id'], ['getitfixed.situation.id'], name=op.f('fk_situation_for_permission_situation_id_situation')),
    sa.PrimaryKeyConstraint('situation_id', 'permission_id', name=op.f('pk_situation_for_permission')),
    schema='getitfixed'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('situation_for_permission', schema='getitfixed')
    op.drop_table('photo', schema='getitfixed')
    op.drop_table('contact_person', schema='getitfixed')
    op.drop_table('excavation', schema='getitfixed')
    op.drop_table('comments', schema='getitfixed')
    op.drop_table('situation', schema='getitfixed')
    op.drop_table('district', schema='getitfixed')
    op.drop_table('bus_stops', schema='getitfixed')
    op.drop_table('address', schema='getitfixed')
    # ### end Alembic commands ###
